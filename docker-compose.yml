version: '3.8'

services:
  # Web Dashboard (Next.js)
  web:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    volumes:
      - ./uploads:/app/uploads
      - ./output:/app/output
      - ./temp:/app/temp
    depends_on:
      - api
    restart: unless-stopped

  # API Server (Flask)
  api:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DATABASE_URL=sqlite:///app/bot_data.db
    volumes:
      - ./uploads:/app/uploads
      - ./output:/app/output
      - ./temp:/app/temp
      - ./bot_data.db:/app/bot_data.db
    restart: unless-stopped

  # Telegram Bot
  bot:
    build: .
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - WEBHOOK_URL=http://web:3000
    volumes:
      - ./uploads:/app/uploads
      - ./output:/app/output
      - ./temp:/app/temp
      - ./bot_data.db:/app/bot_data.db
    depends_on:
      - api
    restart: unless-stopped

  # Database (Optional - jika menggunakan PostgreSQL)
  # database:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: telegram_bot
  #     POSTGRES_USER: bot_user
  #     POSTGRES_PASSWORD: bot_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

volumes:
  postgres_data:
